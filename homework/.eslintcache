[{"C:\\Люда\\owu\\react\\homework\\src\\index.js":"1","C:\\Люда\\owu\\react\\homework\\src\\reportWebVitals.js":"2","C:\\Люда\\owu\\react\\homework\\src\\App.js":"3","C:\\Люда\\owu\\react\\homework\\src\\components\\UseState.js":"4","C:\\Люда\\owu\\react\\homework\\src\\components\\UseEffect.js":"5","C:\\Люда\\owu\\react\\homework\\src\\components\\UseReduce.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":412,"mtime":1608807555011,"results":"10","hashOfConfig":"8"},{"size":913,"mtime":1608807438840,"results":"11","hashOfConfig":"8"},{"size":1505,"mtime":1608807438784,"results":"12","hashOfConfig":"8"},{"size":2353,"mtime":1608807555003,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"impdvl",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"C:\\Люда\\owu\\react\\homework\\src\\index.js",[],["29","30"],"C:\\Люда\\owu\\react\\homework\\src\\reportWebVitals.js",[],"C:\\Люда\\owu\\react\\homework\\src\\App.js",[],"C:\\Люда\\owu\\react\\homework\\src\\components\\UseState.js",[],"C:\\Люда\\owu\\react\\homework\\src\\components\\UseEffect.js",["31"],"import React, {useState, useEffect} from 'react';\r\n\r\nconst Test = ()=>{\r\n    useEffect(()=>{\r\n        console.log('mount');\r\n        const interval = setInterval(()=> console.log('interval', 1000));\r\n\r\n        return ()=>{ /*при умові в renderi counter !== 2 спрацює return useEffect ф-ї Test*/\r\n            console.log('unmount');\r\n            clearInterval(interval);\r\n        }\r\n    }, []);\r\n    return(\r\n        <h1>Will be unmounted</h1>\r\n        )\r\n\r\n}\r\n\r\nexport default function UseEffect(){\r\n    const [counter, setCounter] = useState(1);\r\n    const [todo, setToDo] = useState(null);\r\n\r\n    const fetchData = async ()=>{\r\n        const response = await fetch(`https://jsonplaceholder.typicode.com/todos/${counter}`);\r\n        const json = await response.json();\r\n        setToDo(json);\r\n    }\r\n    useEffect(()=>{\r\n        console.log('effect');\r\n        fetchData();\r\n        }, [counter]);\r\n\r\n    const handlerIncrement = ()=> setCounter(prevState => prevState + 1);\r\n    const handlerReset = ()=> setCounter(1);\r\n    const handleResetToDo = ()=> setToDo(null);\r\n\r\n    return(\r\n        <div>\r\n            <h1>Counter: {counter}</h1>\r\n            {counter !== 2 && <Test/>}\r\n            <button onClick={handlerIncrement}>++</button>\r\n            <button onClick={handlerReset}>reset</button>\r\n            <button onClick={handleResetToDo}>resetToDo</button>\r\n\r\n            {!!todo && (<h2>{todo.id}-{todo.title}</h2>)}\r\n        </div>\r\n\r\n    );\r\n}","C:\\Люда\\owu\\react\\homework\\src\\components\\UseReduce.js",["32"],"import React, {useState, useEffect, useReducer} from 'react';\r\n\r\nconst reducer = (state, action) =>{\r\n    switch (action.type){\r\n        case 'SET_TODO_ITEM': {\r\n            return action.payload;\r\n        }\r\n        case 'RESET_TODO': {\r\n            return null;\r\n        }\r\n        case 'TOGGLE_TODO_COMPLETED': {\r\n            return {\r\n                ...state,\r\n                completed: !state.completed\r\n            }\r\n        }\r\n        case 'CHANGE_TODO_TITLE': {\r\n            return {\r\n                ...state,\r\n                title: action.payload\r\n            }\r\n        }\r\n        default: {\r\n            console.error('not valid action', action.type);\r\n            return state;\r\n        }\r\n    }\r\n}\r\nconst initialState = null;\r\n\r\nexport default function UseReducer(){\r\n    const [counter, setCounter] = useState(1);\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    const [inputValue, inputChange] = useState('');\r\n\r\n    const fetchData = async ()=>{\r\n        const response = await fetch(`https://jsonplaceholder.typicode.com/todos/${counter}`);\r\n        const json = await response.json();\r\n        dispatch({type: 'SET_TODO_ITEM', payload: json});\r\n    };\r\n\r\n    useEffect(()=>{\r\n        console.log('effect');\r\n        fetchData();\r\n    }, [counter]);\r\n\r\n    const handlerIncrement = ()=> setCounter(prevState => prevState + 1);\r\n    const handlerReset = ()=> setCounter(1);\r\n    const handleResetToDo = ()=> {\r\n        dispatch({type: 'RESET_TODO'});\r\n    };\r\n    const handleToDoCompleted = ()=> {\r\n        dispatch({type: 'TOGGLE_TODO_COMPLETED'});\r\n    };\r\n    const handleTitleChange = ()=> {\r\n        dispatch({type: 'CHANGE_TODO_TITLE', payload: inputValue});\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <h1>useReduce</h1>\r\n            <h2>Counter: {counter}</h2>\r\n            <button onClick={handlerIncrement}>++</button>\r\n            <button onClick={handlerReset}>reset</button>\r\n            <button onClick={handleResetToDo}>resetToDo</button>\r\n            <button onClick={handleToDoCompleted}>toggle</button>\r\n            <input value={inputValue} onChange={({target: {value}})=>inputChange(value)}/>\r\n            <button onClick={handleTitleChange}>change title</button>\r\n\r\n            {!!state && (<h2>{state.id}-{state.title}-{state.completed.toString()}</h2>)}\r\n        </div>\r\n    )}\r\n",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":31,"column":12,"nodeType":"39","endLine":31,"endColumn":21,"suggestions":"40"},{"ruleId":"37","severity":1,"message":"38","line":44,"column":8,"nodeType":"39","endLine":44,"endColumn":17,"suggestions":"41"},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["44"],["45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},{"desc":"46","fix":"48"},"Update the dependencies array to be: [counter, fetchData]",{"range":"49","text":"50"},{"range":"51","text":"50"},[888,897],"[counter, fetchData]",[1280,1289]]